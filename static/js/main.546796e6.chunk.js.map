{"version":3,"sources":["flex/FlexContainer.js","flex/FlexChild.js","helpers/helper.js","menus/AlignItemsMenu.js","menus/FlexDirectionMenu.js","menus/FlexWrapMenu.js","menus/JustifyContentMenu.js","menus/SelectMenu.js","flex/FlexOptions.js","inputs/FlexBasisInput.js","inputs/FlexGrowInput.js","inputs/FlexShrinkInput.js","inputs/OrderInput.js","inputs/Input.js","flex/FlexInputs.js","App.js","serviceWorker.js","index.js"],"names":["defaultFlexContainerProps","display","flexDirection","flexWrap","justifyContent","alignItems","FlexContainer","useState","flexContainerProps","setFlexContainerProps","Box","Array","map","_","index","key","styles","defaultFlexProps","flexGrow","flexShrink","flexBasis","order","padding","margin","maxWidth","paper","flex","FlexChild","flexProps","setFlexProps","Container","style","Paper","updateProp","initialProps","setProps","val","Object","assign","AlignItemsMenu","props","label","value","onChange","choices","FlexDirectionMenu","FlexWrapMenu","JustifyContentMenu","SelectMenu","textAlign","FormControl","width","InputLabel","shrink","id","Select","labelId","e","target","displayEmpty","choice","MenuItem","FlexOptions","FlexBasisInput","type","FlexGrowInput","FlexShrinkInput","OrderInput","Input","TextField","InputLabelProps","variant","defaultValue","min","max","required","FlexInputs","App","Typography","gutterBottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.546796e6.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {FlexChild, FlexOptions} from \".\";\n\nconst defaultFlexContainerProps = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n};\n\nexport const FlexContainer = () => {\n    const [flexContainerProps, setFlexContainerProps] = useState(defaultFlexContainerProps);\n\n    return (\n        <Box>\n            <FlexOptions flexContainerProps={flexContainerProps} setFlexContainerProps={setFlexContainerProps}/>\n            <Box {...flexContainerProps}>\n                {[...Array(10)].map((_, index) => <FlexChild key={index}/>)}\n            </Box>\n        </Box>\n    );\n};\n\n","import React, {useState} from \"react\";\nimport {Container, Paper} from \"@material-ui/core\";\nimport {FlexInputs} from \".\";\n\nconst styles = {\n    defaultFlexProps: {\n        flexGrow: 1,\n        flexShrink: 1,\n        flexBasis: '25%',\n        order: 0,\n        padding: 16,\n        margin: 0,\n        maxWidth: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    paper: {\n        padding: \"32px 16px\",\n        flex: \"1 0 auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n};\n\nexport const FlexChild = () => {\n    const [flexProps, setFlexProps] = useState(styles.defaultFlexProps);\n\n    return (\n        <Container style={flexProps}>\n            <Paper style={styles.paper}>\n                <FlexInputs flexProps={flexProps} setFlexProps={setFlexProps}/>\n            </Paper>\n        </Container>\n    );\n};\n\n","export const updateProp = (initialProps, setProps, key, val) => {\n    const newProps = Object.assign({}, initialProps, {[key]: val});\n    setProps(newProps);\n};","import {SelectMenu} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const AlignItemsMenu = props => {\n    const {flexContainerProps, setFlexContainerProps} = props;\n    return <SelectMenu\n        label=\"align-items\"\n        value={flexContainerProps.alignItems}\n        onChange={val => updateProp(flexContainerProps, setFlexContainerProps, \"alignItems\", val)}\n        choices={[\"flex-start\", \"flex-end\", \"center\", \"baseline\", \"stretch\"]}\n    />;\n};","import {SelectMenu} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const FlexDirectionMenu = props => {\n    const {flexContainerProps, setFlexContainerProps} = props;\n    return <SelectMenu\n        label=\"flex-direction\"\n        value={flexContainerProps.flexDirection}\n        onChange={val => updateProp(flexContainerProps, setFlexContainerProps, \"flexDirection\", val)}\n        choices={[\"column\", \"row\", \"column-reverse\", \"row-reverse\"]}\n    />;\n};","import {SelectMenu} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const FlexWrapMenu = props => {\n    const {flexContainerProps, setFlexContainerProps} = props;\n    return <SelectMenu\n        label=\"flex-wrap\"\n        value={flexContainerProps.flexWrap}\n        onChange={val => updateProp(flexContainerProps, setFlexContainerProps, \"flexWrap\", val)}\n        choices={[\"nowrap\", \"wrap\", \"wrap-reverse\"]}\n    />;\n};","import {SelectMenu} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const JustifyContentMenu = props => {\n    const {flexContainerProps, setFlexContainerProps} = props;\n    return <SelectMenu\n        label=\"justify-content\"\n        value={flexContainerProps.justifyContent}\n        onChange={val => updateProp(flexContainerProps, setFlexContainerProps, \"justifyContent\", val)}\n        choices={[\"flex-start\", \"flex-end\", \"space-around\", \"space-between\", \"space-evenly\", \"center\"]}\n    />;\n};","import React from \"react\";\nimport {Box, FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\"\n\nexport const SelectMenu = props => {\n    const {label, value, onChange, choices} = props;\n\n    return (\n        <Box flex=\"1 1 200px\" padding=\"16px\" textAlign=\"left\">\n            <FormControl style={{width: \"100%\"}}>\n                <InputLabel shrink id={`${label}-label`}>{label}</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-placeholder-label-label\"\n                    value={value}\n                    onChange={e => onChange(e.target.value)}\n                    displayEmpty\n                >\n                    {choices.map(choice =>\n                        <MenuItem key={choice} value={choice}>{choice}</MenuItem>\n                    )}\n                </Select>\n            </FormControl>\n        </Box>\n    );\n};","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {AlignItemsMenu, FlexDirectionMenu, FlexWrapMenu, JustifyContentMenu} from \"../menus\";\n\nexport const FlexOptions = props => {\n    return (\n        <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n            <FlexDirectionMenu {...props}/>\n            <FlexWrapMenu {...props}/>\n            <JustifyContentMenu {...props}/>\n            <AlignItemsMenu {...props}/>\n        </Box>\n    );\n};","import {Input} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const FlexBasisInput = props => {\n    const {flexProps, setFlexProps} = props;\n    return <Input\n        label=\"flex-basis\"\n        type=\"text\"\n        value={flexProps.flexBasis}\n        onChange={val => updateProp(flexProps, setFlexProps, \"flexBasis\", val)}\n    />;\n};","import {Input} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const FlexGrowInput = props => {\n    const {flexProps, setFlexProps} = props;\n    return <Input\n        label=\"flex-grow\"\n        type=\"number\"\n        value={flexProps.flexGrow}\n        onChange={val => updateProp(flexProps, setFlexProps, \"flexGrow\", val)}\n    />;\n};","import {Input} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const FlexShrinkInput = props => {\n    const {flexProps, setFlexProps} = props;\n    return <Input\n        label=\"flex-shrink\"\n        type=\"number\"\n        value={flexProps.flexShrink}\n        onChange={val => updateProp(flexProps, setFlexProps, \"flexShrink\", val)}\n    />;\n};","import {Input} from \".\";\nimport {updateProp} from \"../helpers/helper\";\nimport React from \"react\";\n\nexport const OrderInput = props => {\n    const {flexProps, setFlexProps} = props;\n    return <Input\n        label=\"order\"\n        type=\"number\"\n        value={flexProps.order}\n        onChange={val => updateProp(flexProps, setFlexProps, \"order\", val)}\n    />;\n};","import {Box, TextField} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Input = props => {\n    const {label, type, value, onChange} = props;\n\n    return (\n        <Box flex=\"1 1 auto\" padding=\"16px\" textAlign=\"left\">\n            <TextField\n                style={{width: 85}}\n                label={label}\n                type={type}\n                InputLabelProps={{shrink: true}}\n                margin=\"none\"\n                variant=\"standard\"\n                defaultValue={value}\n                min={0}\n                max={20}\n                required={true}\n                onChange={e => onChange(e.target.value)}\n            />\n        </Box>\n    );\n};","import {Box} from \"@material-ui/core\";\nimport {FlexBasisInput, FlexGrowInput, FlexShrinkInput, OrderInput} from \"../inputs\";\nimport React from \"react\";\n\nexport const FlexInputs = props => {\n    return (\n        <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n            <FlexGrowInput {...props}/>\n            <FlexShrinkInput {...props}/>\n            <FlexBasisInput {...props}/>\n            <OrderInput {...props}/>\n        </Box>\n    );\n};","import React from 'react';\nimport 'reset-css';\nimport './App.css';\nimport {FlexContainer} from \"./flex\";\nimport {Container, Typography} from \"@material-ui/core\";\n\nfunction App() {\n    return (\n        <Container style={{padding: 32, textAlign: 'center'}}>\n            <Typography variant=\"h3\" gutterBottom>Flexbox Playground</Typography>\n            <FlexContainer/>\n        </Container>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}